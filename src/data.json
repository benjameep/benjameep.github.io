{
  "projects": [{
    "title": "Program Visualization",
    "tags": ["d3"],
    "description": "Previous work of mine (the BYU-I Course Requisite Graph) had gotten into the hands of Academic Advising, and they brought me in to see if I could improve on the concept. So, I learned D3, poured over a bunch of scholarly articles on how to generate visualizations of DAGs (Directed Acyclic Graphs). After 10 different attempts and almost declaring it impossible three times (never out loud), something started to form. This project still has a lot of refining to go but is on track to become accepted by the university and used by the entire school.",
    "image": "program.png",
    "code": "https://github.com/byuitechops/program-visualization",
    "link": "https://byuitechops.github.io/program-visualization/backtothestart/programs/accounting.html",
    "date": "August - Current",
    "hours": "+200"
  },{
    "title": "Canvas Api Wrapper",
    "tags": ["api","NodeJs"],
    "description": "My school is shifting over to using Instructure's Canvas as their LMS. As our dev team deals primarily with the LMS we use their API a lot. So, I volunteered to write a NodeJs wrapper for the Canvas API. I was able to abstract 70% of the Canvas API and optimized parallelism to be almost twice as fast our previous API wrapper. It is now used by our entire team and has 12-50 downloads per week on npm.",
    "image": "canvas.png",
    "code": "https://github.com/byuitechops/canvas-api-wrapper",
    "link": "https://www.npmjs.com/package/canvas-api-wrapper",
    "date": "May-July 2018",
    "hours": "180"
  },{
    "title": "Techops Toggl Tracker",
    "tags": ["webpack","ejs","CORS","api","d3","Primer","oauth2","firebase"],
    "description": "Our dev team works on so many small projects that it is difficult for each person to remember all the projects they have going on, let alone all the projects for the entire team. Our team also lacks a system of tracking how much time is put into each project. So I created a Single Page Application that completely client-side (our team doesn't have a server) Oauth's with Github, retrieves data from <a href=\"toggl.com\">Toggl's API</a>, updates firebase, and displays with d3 when a project is worked on, the bandwidth it is taking of the team, and history of the project. This project has been put on hold for now but will be picked back up and implemented soon.",
    "image": "toggltrack.png",
    "code": "https://github.com/benjameep/techops-toggl-tracker",
    "link": "",
    "date": "July 2018",
    "hours": "40"
  },{
    "title": "Dot Code",
    "tags": ["d3","d3-simulation"],
    "description": "I have long been fascinated by ciphers and codes. And especially like ciphers where anyone can figure out by staring at for long enough. I had the idea to create this sort of connect the dots cipher which achieves that goal. The problem is that it is painstakingly slow to create by hand. But by using d3-simulation I can generate all of the random scattered particles that the cipher required.",
    "image": "dotcode.png",
    "code": "https://github.com/benjameep/dot-code",
    "link": "http://benjameep.github.io/dot-code",
    "date": "July 2018",
    "hours": "5"
  },{
    "title": "BYU-I Student Map",
    "tags": ["web scraping","d3","d3-geo","d3-simulation","topojson"],
    "description": "The BYU-I public student directory includes the home town for most students. So I scraped the public student directory (no easy task) and sent their home town to one of Googleâ€™s apis to look up the latitude and longitude of each. Instead of the traditional grouping where two nodes near each other form a single larger node. I used d3-simulation to give each node collision and gravity towards where they are supposed to be. This resulted in high-density cities near each other to get squished, and I had to cache to locations of each node because it takes so long for the simulation to run. So If I were to do this project again, I would probably go the other route.",
    "image": "studentmap.png",
    "code": "https://github.com/benjameep/byui-student-map",
    "link": "http://benjameep.github.io/byui-student-map",
    "date": "June 2018",
    "hours": "8"
  },{
    "title": "Courseplan",
    "tags": ["webpack","semantic-ui","babel","ejs","firebase","web scraping"],
    "description": "Revisiting the partially created UI and course data I wrote scrapers for with Webpack. This was one of the first times I had worked with webpack and struggled to get semantic-ui to cooperate with webpack. Hence why everything is compiled into the bundle.js except for the semantic-ui files. I have to run the scrapers manually to update the data, but those updates get set to firebase which the site pulls off of so at least there are no hard-coded data files. But all in all, I'm pleased with the result especially as the project works completely independent of the School's systems",
    "image": "courseplan.png",
    "code": "https://github.com/benjameep/courseplan",
    "link": "http://benjameep.github.io/courseplan",
    "date": "June 2018",
    "hours": "30"
  },{
    "title": "FDHUM 110",
    "tags": ["semantic-ui","web scraping","ejs"],
    "description": "My FDHUM110 class was organized so horribly in the LMS, that I decided to make a better one. I scraped all the links through D2L's API and based only on the name of the files (that's all I had to go off of) figured out which files were information files for other assignments, which of the three sections it goes under, and what type of assignment it was. So thankfully all that information was in the file name, but still quite a hassle to parse. I posted a link to it on the course's discussion board and half a dozen people commented saying that they liked it. So hopefully it helped others out as well.",
    "image": "fdhum.png",
    "code": "https://github.com/benjameep/fdhum110",
    "link": "http://benjameep.github.io/fdhum110",
    "date": "April 2018",
    "hours": "12"
  },{
    "title": "obj-iterate",
    "tags": ["npm"],
    "description": "I often get frustrated that in JS it is difficult to iterate through an object and even more difficult to 'reduce' or 'filter' the entries in an object. So I built this library to supply that functionality for me.",
    "image": "npm.png",
    "code": "https://github.com/benjameep/obj-iterate",
    "link": "https://www.npmjs.com/package/obj-iterate",
    "date": "March 2018",
    "hours": "5"
  },{
    "title": "Scripture Injection",
    "tags": [],
    "description": "",
    "image": "scripture.png",
    "code": "https://github.com/benjameep/scripture-injection",
    "link": "http://benjameep.github.io/scripture-injection",
    "date": "Febuary 2018",
    "hours": "7"
  },{
    "title": "Twitter Queueit SMS",
    "tags": [],
    "description": "",
    "image": "twitter.png",
    "code": "https://github.com/benjameep/twitter-queueit-sms",
    "link": "",
    "date": "January 2018",
    "hours": "6"
  },{
    "title": "Word Sorter",
    "tags": [],
    "description": "",
    "image": "wordsort.png",
    "code": "https://github.com/benjameep/amy-words",
    "link": "http://benjameep.github.io/amy-words",
    "date": "October 2017",
    "hours": "18"
  },{
    "title": "BYU-I Course Requisite Graph",
    "tags": [],
    "description": "",
    "image": "reqmap.png",
    "code": "https://github.com/benjameep/byui-req-graph",
    "link": "http://benjameep.github.io/byui-req-graph",
    "date": "October 2017",
    "hours": "25"
  },{
    "title": "Gradplanner",
    "tags": [],
    "description": "",
    "image": "gradplan.png",
    "code": "https://github.com/benjameep/gradplanner",
    "link": "",
    "date": "September - October 2017",
    "hours": "120"
  },{
    "title": "Falling Block Maze",
    "tags": [],
    "description": "",
    "image": "falling.png",
    "code": "https://github.com/benjameep/falling-block-maze",
    "link": "http://benjameep.github.io/falling-block-maze",
    "date": "October 2017",
    "hours": "45"
  },{
    "title": "Word Manipulation Path Finder",
    "tags": [],
    "description": "",
    "image": "wordgraph.png",
    "code": "https://github.com/benjameep/word-grapher",
    "link": "",
    "date": "August 2017",
    "hours": "4"
  },{
    "title": "night-map",
    "tags": [],
    "description": "",
    "image": "npm.png",
    "code": "https://github.com/benjameep/night-map",
    "link": "https://www.npmjs.com/package/night-map",
    "date": "May 2017",
    "hours": "6"
  },{
    "title": "Combinatorics Clock",
    "tags": [],
    "description": "",
    "image": "combi.png",
    "code": "https://github.com/benjameep/combi-clock",
    "link": "http://benjameep.github.io/combi-clock",
    "date": "April 2017",
    "hours": "6"
  },{
    "title": "Square Pie Chart",
    "tags": [],
    "description": "Huffman tree",
    "image": "pie.png",
    "code": "https://github.com/benjameep/square-pie-charts",
    "link": "http://benjameep.github.io/square-pie-charts",
    "date": "March 2017",
    "hours": "6"
  },{
    "title": "Monopoly Game Simulator",
    "tags": [],
    "description": "",
    "image": "monop.png",
    "code": "https://github.com/benjameep/monop-probs",
    "link": "",
    "date": "Febuary 2017",
    "hours": "25"
  },{
    "title": "Adobe Api Runner",
    "tags": [],
    "description": "",
    "image": "adobe.png",
    "code": "https://github.com/byuitechops/adobe-api-runner",
    "link": "",
    "date": "Febuary - March 2017",
    "hours": "130"
  },{
    "title": "Android Lock Combinations",
    "tags": ["snap","svg"],
    "description": "",
    "image": "lock.png",
    "code": "https://github.com/benjameep/android-lock",
    "link": "http://benjameep.github.io/android-lock",
    "date": "Febuary 2017",
    "hours": "11"
  },{
    "title": "Post-Fix Truth Table Generator",
    "tags": [],
    "description": "",
    "image": "truthtable.png",
    "code": "https://github.com/benjameep/truth-table",
    "link": "",
    "date": "January 2017",
    "hours": "3"
  },{
    "title": "Encrypter",
    "tags": [],
    "description": "",
    "image": "encrypt.png",
    "code": "https://github.com/benjameep/encrypter",
    "link": "http://benjameep.github.io/encrypter",
    "date": "January 2017",
    "hours": "15"
  },{
    "title": "Predictopoly",
    "tags": [],
    "description": "",
    "image": "predictopoly.png",
    "code": "https://github.com/benjameep/predictopoly",
    "link": "http://benjameep.github.io/predictopoly",
    "date": "December 2016",
    "hours": "50"
  },{
    "title": "Illusion Creator",
    "tags": [],
    "description": "",
    "image": "illusion.png",
    "code": "https://github.com/benjameep/illusion-creator",
    "link": "http://benjameep.github.io/illusion-creator",
    "date": "November 2016",
    "hours": "60"
  },{
    "title": "Tessellation Creator",
    "tags": [],
    "description": "",
    "image": "tessell.png",
    "code": "https://github.com/benjameep/tessellations",
    "link": "http://benjameep.github.io/tessellations",
    "date": "October 2016",
    "hours": "40"
  },{
    "title": "Conway's Game of Life",
    "tags": [],
    "description": "",
    "image": "conway.png",
    "code": "https://github.com/benjameep/game-of-life",
    "link": "http://benjameep.github.io/game-of-life",
    "date": "2016",
    "hours": "50"
  },{
    "title": "Snake",
    "tags": [],
    "description": "",
    "image": "snake.png",
    "code": "https://github.com/benjameep/snake",
    "link": "http://benjameep.github.io/snake",
    "date": "2016",
    "hours": "30"
  }]
}